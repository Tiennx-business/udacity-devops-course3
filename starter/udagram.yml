Description: CD12352 - Infrastructure as Code Project - Udagram

Parameters:
  # Add your parameters here
  InstanceType:
    Type: String
    Default: !Ref InstanceType
  AmiId:
    Type: String
    Default: !Ref AmiId
  DesiredCapacity:
    Type: Number
    Default: 4
  MinSize:
    Type: Number
    Default: 4
  MaxSize:
    Type: Number
    Default: 4

Resources:
  # Add your resources here
  # We include a portion of the LaunchTemplate resource so you can use the UserData.
  WebAppLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateData:
        UserData:
          Fn::Base64: |
            #!/bin/bash
            apt-get update -y
            sudo apt-get install nginx -y
            service nginx start
  AutoScalinGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      DesiredCapacity: !Ref DesiredCapacity
      MinSize: !Ref MinSize
      MaxSize: !Ref MaxSize
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      LaunchTemplate:
        LaunchTemplateName: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      HealthCheckType: "EC2"
      HealthCheckGracePeriod: 300
  AppLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Name: "AppLoadBalancer"
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups:
        - !Ref LoadBalancerSG
      LoadBalancerType: "application"
      Scheme: "internet-facing"
  AppTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Name: "AppTargetGroup"
      Port: 80
      Protocol: "HTTP"
      VpcId: !Ref VPC
      HealthyCheckProtocol: "HTTP"
      HealthyCheckPath: "/"
  AppListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: "forward"
        TargetGroupArn: !Ref AppTargetGroup
      LoadBalancerArn: !Ref AppLoadBalancer
      Paort: 80
      Protocol: "HTTP"
  LoadBalancerSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow HTTP traffic from Load Balancer"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref LoadBalancerSG